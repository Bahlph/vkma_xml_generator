<?xml version="1.0"?>
<registry>
	<comment>DO NOT MODIFY MANUALLY!</comment>
	<comment>This file was generated using [generator](https://github.com/Cvelth/vma_xml_generator).</comment>
	<comment>Generated files are licensed under [The Unlicense](https://unlicense.org).</comment>
	<comment>The generator itself is licensed under [MIT License](https://www.mit.edu/~amini/LICENSE.md).</comment>
	<comment>SPDX-License-Identifier: Unlicense.</comment>
	<comment></comment>
	<comment>This file was generated from xml 'doxygen' documentation for [vk_mem_alloc.h (VulkanMemoryAllocator)](https://github.com/GPUOpen-LibrariesAndSDKs/VulkanMemoryAllocator/blob/master/src/vk_mem_alloc.h) header.</comment>
	<comment>It is intended to be used as [vulkan-hpp](https://github.com/KhronosGroup/Vulkan-Hpp) generator input.</comment>
	<comment>The goal is to generate a [vulkan.hpp](https://github.com/KhronosGroup/Vulkan-Hpp/blob/master/vulkan/vulkan.hpp) compatible header - an improved c++ interface.</comment>
	<types>
		<type category="define">#define <name>VMA_RECORDING_ENABLED</name> 0</type>
		<type category="define">#define <name>VMA_VULKAN_VERSION</name> 1000000</type>
		<type category="define">#define <name>VMA_DEDICATED_ALLOCATION</name> 0</type>
		<type category="define">#define <name>VMA_BIND_MEMORY2</name> 0</type>
		<type category="define">#define <name>VMA_MEMORY_BUDGET</name> 0</type>
		<type category="define">#define <name>VMA_STATS_STRING_ENABLED</name> 1</type>
		<comment></comment>
		<comment>Bitmask types</comment>
		<type category="bitmask">typedef <type>VkFlags</type> <name>VmaAllocatorCreateFlags</name>;</type>
		<type category="bitmask">typedef <type>VkFlags</type> <name>VmaRecordFlags</name>;</type>
		<type category="bitmask">typedef <type>VkFlags</type> <name>VmaAllocationCreateFlags</name>;</type>
		<type category="bitmask">typedef <type>VkFlags</type> <name>VmaPoolCreateFlags</name>;</type>
		<type category="bitmask">typedef <type>VkFlags</type> <name>VmaDefragmentationFlags</name>;</type>
		<comment></comment>
		<comment>Handle types</comment>
		<type category="handle" objtypeenum="VMA_OBJECT_TYPE_ALLOCATOR">
			<type>VK_DEFINE_HANDLE</type>(<name>VmaAllocator</name>)</type>
		<type category="handle" objtypeenum="VMA_OBJECT_TYPE_POOL">
			<type>VK_DEFINE_HANDLE</type>(<name>VmaPool</name>)</type>
		<type category="handle" objtypeenum="VMA_OBJECT_TYPE_ALLOCATION">
			<type>VK_DEFINE_HANDLE</type>(<name>VmaAllocation</name>)</type>
		<type category="handle" objtypeenum="VMA_OBJECT_TYPE_DEFRAGMENTATION_CONTEXT">
			<type>VK_DEFINE_HANDLE</type>(<name>VmaDefragmentationContext</name>)</type>
		<comment></comment>
		<comment>Enumeration types</comment>
		<type name="VmaAllocatorCreateFlagBits" category="enum" />
		<type name="VmaRecordFlagBits" category="enum" />
		<type name="VmaMemoryUsage" category="enum" />
		<type name="VmaAllocationCreateFlagBits" category="enum" />
		<type name="VmaPoolCreateFlagBits" category="enum" />
		<type name="VmaDefragmentationFlagBits" category="enum" />
		<comment></comment>
		<comment>Function pointer typedefs</comment>
		<type category="funcpointer">typedef void(VKAPI_PTR *<name>PFN_vmaAllocateDeviceMemoryFunction</name>)(<type>VmaAllocator</type> allocator, <type>uint32_t</type> memoryType, <type>VkDeviceMemory</type> memory, <type>VkDeviceSize</type> size);</type>
		<type category="funcpointer">typedef void(VKAPI_PTR *<name>PFN_vmaFreeDeviceMemoryFunction</name>)(<type>VmaAllocator</type> allocator, <type>uint32_t</type> memoryType, <type>VkDeviceMemory</type> memory, <type>VkDeviceSize</type> size);</type>
		<comment></comment>
		<comment>Struct types</comment>
		<type category="struct" name="VmaAllocation" />
		<type category="struct" name="VmaAllocationCreateInfo">
			<member>
				<type>VmaAllocationCreateFlags</type> <name>flags</name>
			</member>
			<member>
				<type>VmaMemoryUsage</type> <name>usage</name>
			</member>
			<member>
				<type>VkMemoryPropertyFlags</type> <name>requiredFlags</name>
			</member>
			<member>
				<type>VkMemoryPropertyFlags</type> <name>preferredFlags</name>
			</member>
			<member>
				<type>uint32_t</type> <name>memoryTypeBits</name>
			</member>
			<member>
				<type>VmaPool</type> <name>pool</name>
			</member>
			<member>
				<type>void *</type> <name>pUserData</name>
			</member>
		</type>
		<type category="struct" name="VmaAllocationInfo">
			<member>
				<type>uint32_t</type> <name>memoryType</name>
			</member>
			<member>
				<type>VkDeviceMemory</type> <name>deviceMemory</name>
			</member>
			<member>
				<type>VkDeviceSize</type> <name>offset</name>
			</member>
			<member>
				<type>VkDeviceSize</type> <name>size</name>
			</member>
			<member>
				<type>void *</type> <name>pMappedData</name>
			</member>
			<member>
				<type>void *</type> <name>pUserData</name>
			</member>
		</type>
		<type category="struct" name="VmaAllocator" />
		<type category="struct" name="VmaAllocatorCreateInfo">
			<member>
				<type>VmaAllocatorCreateFlags</type> <name>flags</name>
			</member>
			<member>
				<type>VkPhysicalDevice</type> <name>physicalDevice</name>
			</member>
			<member>
				<type>VkDevice</type> <name>device</name>
			</member>
			<member>
				<type>VkDeviceSize</type> <name>preferredLargeHeapBlockSize</name>
			</member>
			<member>
				<type>const VkAllocationCallbacks *</type> <name>pAllocationCallbacks</name>
			</member>
			<member>
				<type>const VmaDeviceMemoryCallbacks *</type> <name>pDeviceMemoryCallbacks</name>
			</member>
			<member>
				<type>uint32_t</type> <name>frameInUseCount</name>
			</member>
			<member>
				<type>const VkDeviceSize *</type> <name>pHeapSizeLimit</name>
			</member>
			<member>
				<type>const VmaVulkanFunctions *</type> <name>pVulkanFunctions</name>
			</member>
			<member>
				<type>const VmaRecordSettings *</type> <name>pRecordSettings</name>
			</member>
			<member>
				<type>VkInstance</type> <name>instance</name>
			</member>
			<member>
				<type>uint32_t</type> <name>vulkanApiVersion</name>
			</member>
		</type>
		<type category="struct" name="VmaBudget">
			<member>
				<type>VkDeviceSize</type> <name>blockBytes</name>
			</member>
			<member>
				<type>VkDeviceSize</type> <name>allocationBytes</name>
			</member>
			<member>
				<type>VkDeviceSize</type> <name>usage</name>
			</member>
			<member>
				<type>VkDeviceSize</type> <name>budget</name>
			</member>
		</type>
		<type category="struct" name="VmaDefragmentationContext" />
		<type category="struct" name="VmaDefragmentationInfo">
			<member>
				<type>VkDeviceSize</type> <name>maxBytesToMove</name>
			</member>
			<member>
				<type>uint32_t</type> <name>maxAllocationsToMove</name>
			</member>
		</type>
		<type category="struct" name="VmaDefragmentationInfo2">
			<member>
				<type>VmaDefragmentationFlags</type> <name>flags</name>
			</member>
			<member>
				<type>uint32_t</type> <name>allocationCount</name>
			</member>
			<member>
				<type>VmaAllocation *</type> <name>pAllocations</name>
			</member>
			<member>
				<type>VkBool32 *</type> <name>pAllocationsChanged</name>
			</member>
			<member>
				<type>uint32_t</type> <name>poolCount</name>
			</member>
			<member>
				<type>VmaPool *</type> <name>pPools</name>
			</member>
			<member>
				<type>VkDeviceSize</type> <name>maxCpuBytesToMove</name>
			</member>
			<member>
				<type>uint32_t</type> <name>maxCpuAllocationsToMove</name>
			</member>
			<member>
				<type>VkDeviceSize</type> <name>maxGpuBytesToMove</name>
			</member>
			<member>
				<type>uint32_t</type> <name>maxGpuAllocationsToMove</name>
			</member>
			<member>
				<type>VkCommandBuffer</type> <name>commandBuffer</name>
			</member>
		</type>
		<type category="struct" name="VmaDefragmentationStats">
			<member>
				<type>VkDeviceSize</type> <name>bytesMoved</name>
			</member>
			<member>
				<type>VkDeviceSize</type> <name>bytesFreed</name>
			</member>
			<member>
				<type>uint32_t</type> <name>allocationsMoved</name>
			</member>
			<member>
				<type>uint32_t</type> <name>deviceMemoryBlocksFreed</name>
			</member>
		</type>
		<type category="struct" name="VmaDeviceMemoryCallbacks">
			<member>
				<type>PFN_vmaAllocateDeviceMemoryFunction</type> <name>pfnAllocate</name>
			</member>
			<member>
				<type>PFN_vmaFreeDeviceMemoryFunction</type> <name>pfnFree</name>
			</member>
		</type>
		<type category="struct" name="VmaPool" />
		<type category="struct" name="VmaPoolCreateInfo">
			<member>
				<type>uint32_t</type> <name>memoryTypeIndex</name>
			</member>
			<member>
				<type>VmaPoolCreateFlags</type> <name>flags</name>
			</member>
			<member>
				<type>VkDeviceSize</type> <name>blockSize</name>
			</member>
			<member>
				<type>size_t</type> <name>minBlockCount</name>
			</member>
			<member>
				<type>size_t</type> <name>maxBlockCount</name>
			</member>
			<member>
				<type>uint32_t</type> <name>frameInUseCount</name>
			</member>
		</type>
		<type category="struct" name="VmaPoolStats">
			<member>
				<type>VkDeviceSize</type> <name>size</name>
			</member>
			<member>
				<type>VkDeviceSize</type> <name>unusedSize</name>
			</member>
			<member>
				<type>size_t</type> <name>allocationCount</name>
			</member>
			<member>
				<type>size_t</type> <name>unusedRangeCount</name>
			</member>
			<member>
				<type>VkDeviceSize</type> <name>unusedRangeSizeMax</name>
			</member>
			<member>
				<type>size_t</type> <name>blockCount</name>
			</member>
		</type>
		<type category="struct" name="VmaRecordSettings">
			<member>
				<type>VmaRecordFlags</type> <name>flags</name>
			</member>
			<member>
				<type>const char *</type> <name>pFilePath</name>
			</member>
		</type>
		<type category="struct" name="VmaStatInfo">
			<member>
				<type>uint32_t</type> <name>blockCount</name>
			</member>
			<member>
				<type>uint32_t</type> <name>allocationCount</name>
			</member>
			<member>
				<type>uint32_t</type> <name>unusedRangeCount</name>
			</member>
			<member>
				<type>VkDeviceSize</type> <name>usedBytes</name>
			</member>
			<member>
				<type>VkDeviceSize</type> <name>unusedBytes</name>
			</member>
			<member>
				<type>VkDeviceSize</type> <name>allocationSizeMin</name>
			</member>
			<member>
				<type>VkDeviceSize</type> <name>allocationSizeAvg</name>
			</member>
			<member>
				<type>VkDeviceSize</type> <name>allocationSizeMax</name>
			</member>
			<member>
				<type>VkDeviceSize</type> <name>unusedRangeSizeMin</name>
			</member>
			<member>
				<type>VkDeviceSize</type> <name>unusedRangeSizeAvg</name>
			</member>
			<member>
				<type>VkDeviceSize</type> <name>unusedRangeSizeMax</name>
			</member>
		</type>
		<type category="struct" name="VmaStats">
			<member>
				<type>VmaStatInfo</type> <name>memoryType</name>
			</member>
			<member>
				<type>VmaStatInfo</type> <name>memoryHeap</name>
			</member>
			<member>
				<type>VmaStatInfo</type> <name>total</name>
			</member>
		</type>
		<type category="struct" name="VmaVulkanFunctions">
			<member>
				<type>PFN_vkGetPhysicalDeviceProperties</type> <name>vkGetPhysicalDeviceProperties</name>
			</member>
			<member>
				<type>PFN_vkGetPhysicalDeviceMemoryProperties</type> <name>vkGetPhysicalDeviceMemoryProperties</name>
			</member>
			<member>
				<type>PFN_vkAllocateMemory</type> <name>vkAllocateMemory</name>
			</member>
			<member>
				<type>PFN_vkFreeMemory</type> <name>vkFreeMemory</name>
			</member>
			<member>
				<type>PFN_vkMapMemory</type> <name>vkMapMemory</name>
			</member>
			<member>
				<type>PFN_vkUnmapMemory</type> <name>vkUnmapMemory</name>
			</member>
			<member>
				<type>PFN_vkFlushMappedMemoryRanges</type> <name>vkFlushMappedMemoryRanges</name>
			</member>
			<member>
				<type>PFN_vkInvalidateMappedMemoryRanges</type> <name>vkInvalidateMappedMemoryRanges</name>
			</member>
			<member>
				<type>PFN_vkBindBufferMemory</type> <name>vkBindBufferMemory</name>
			</member>
			<member>
				<type>PFN_vkBindImageMemory</type> <name>vkBindImageMemory</name>
			</member>
			<member>
				<type>PFN_vkGetBufferMemoryRequirements</type> <name>vkGetBufferMemoryRequirements</name>
			</member>
			<member>
				<type>PFN_vkGetImageMemoryRequirements</type> <name>vkGetImageMemoryRequirements</name>
			</member>
			<member>
				<type>PFN_vkCreateBuffer</type> <name>vkCreateBuffer</name>
			</member>
			<member>
				<type>PFN_vkDestroyBuffer</type> <name>vkDestroyBuffer</name>
			</member>
			<member>
				<type>PFN_vkCreateImage</type> <name>vkCreateImage</name>
			</member>
			<member>
				<type>PFN_vkDestroyImage</type> <name>vkDestroyImage</name>
			</member>
			<member>
				<type>PFN_vkCmdCopyBuffer</type> <name>vkCmdCopyBuffer</name>
			</member>
		</type>
	</types>
	<comment></comment>
	<comment>Enumeration definitions</comment>
	<enums name="VmaMemoryUsage" type="enum">
		<enum value="0" name="VMA_MEMORY_USAGE_UNKNOWN" />
		<enum value="1" name="VMA_MEMORY_USAGE_GPU_ONLY" />
		<enum value="2" name="VMA_MEMORY_USAGE_CPU_ONLY" />
		<enum value="3" name="VMA_MEMORY_USAGE_CPU_TO_GPU" />
		<enum value="4" name="VMA_MEMORY_USAGE_GPU_TO_CPU" />
		<enum value="5" name="VMA_MEMORY_USAGE_CPU_COPY" />
		<enum value="6" name="VMA_MEMORY_USAGE_GPU_LAZILY_ALLOCATED" />
		<enum value="0x7FFFFFFF" name="VMA_MEMORY_USAGE_MAX_ENUM" />
	</enums>
	<comment></comment>
	<comment>Flags</comment>
	<enums name="VmaAllocatorCreateFlagBits" type="bitmask">
		<enum value="0x00000001" name="VMA_ALLOCATOR_CREATE_EXTERNALLY_SYNCHRONIZED_BIT" />
		<enum value="0x00000002" name="VMA_ALLOCATOR_CREATE_KHR_DEDICATED_ALLOCATION_BIT" />
		<enum value="0x00000004" name="VMA_ALLOCATOR_CREATE_KHR_BIND_MEMORY2_BIT" />
		<enum value="0x00000008" name="VMA_ALLOCATOR_CREATE_EXT_MEMORY_BUDGET_BIT" />
		<enum value="0x7FFFFFFF" name="VMA_ALLOCATOR_CREATE_FLAG_BITS_MAX_ENUM" />
	</enums>
	<enums name="VmaRecordFlagBits" type="bitmask">
		<enum value="0x00000001" name="VMA_RECORD_FLUSH_AFTER_CALL_BIT" />
		<enum value="0x7FFFFFFF" name="VMA_RECORD_FLAG_BITS_MAX_ENUM" />
	</enums>
	<enums name="VmaAllocationCreateFlagBits" type="bitmask">
		<enum value="0x00000001" name="VMA_ALLOCATION_CREATE_DEDICATED_MEMORY_BIT" />
		<enum value="0x00000002" name="VMA_ALLOCATION_CREATE_NEVER_ALLOCATE_BIT" />
		<enum value="0x00000004" name="VMA_ALLOCATION_CREATE_MAPPED_BIT" />
		<enum value="0x00000008" name="VMA_ALLOCATION_CREATE_CAN_BECOME_LOST_BIT" />
		<enum value="0x00000010" name="VMA_ALLOCATION_CREATE_CAN_MAKE_OTHER_LOST_BIT" />
		<enum value="0x00000020" name="VMA_ALLOCATION_CREATE_USER_DATA_COPY_STRING_BIT" />
		<enum value="0x00000040" name="VMA_ALLOCATION_CREATE_UPPER_ADDRESS_BIT" />
		<enum value="0x00000080" name="VMA_ALLOCATION_CREATE_DONT_BIND_BIT" />
		<enum value="0x00000100" name="VMA_ALLOCATION_CREATE_WITHIN_BUDGET_BIT" />
		<enum value="0x00010000" name="VMA_ALLOCATION_CREATE_STRATEGY_BEST_FIT_BIT" />
		<enum value="0x00020000" name="VMA_ALLOCATION_CREATE_STRATEGY_WORST_FIT_BIT" />
		<enum value="0x00040000" name="VMA_ALLOCATION_CREATE_STRATEGY_FIRST_FIT_BIT" />
		<enum value="VMA_ALLOCATION_CREATE_STRATEGY_BEST_FIT_BIT" name="VMA_ALLOCATION_CREATE_STRATEGY_MIN_MEMORY_BIT" />
		<enum value="VMA_ALLOCATION_CREATE_STRATEGY_FIRST_FIT_BIT" name="VMA_ALLOCATION_CREATE_STRATEGY_MIN_TIME_BIT" />
		<enum value="VMA_ALLOCATION_CREATE_STRATEGY_WORST_FIT_BIT" name="VMA_ALLOCATION_CREATE_STRATEGY_MIN_FRAGMENTATION_BIT" />
		<enum value="VMA_ALLOCATION_CREATE_STRATEGY_BEST_FIT_BIT | VMA_ALLOCATION_CREATE_STRATEGY_WORST_FIT_BIT | VMA_ALLOCATION_CREATE_STRATEGY_FIRST_FIT_BIT" name="VMA_ALLOCATION_CREATE_STRATEGY_MASK" />
		<enum value="0x7FFFFFFF" name="VMA_ALLOCATION_CREATE_FLAG_BITS_MAX_ENUM" />
	</enums>
	<enums name="VmaPoolCreateFlagBits" type="bitmask">
		<enum value="0x00000002" name="VMA_POOL_CREATE_IGNORE_BUFFER_IMAGE_GRANULARITY_BIT" />
		<enum value="0x00000004" name="VMA_POOL_CREATE_LINEAR_ALGORITHM_BIT" />
		<enum value="0x00000008" name="VMA_POOL_CREATE_BUDDY_ALGORITHM_BIT" />
		<enum value="VMA_POOL_CREATE_LINEAR_ALGORITHM_BIT | VMA_POOL_CREATE_BUDDY_ALGORITHM_BIT" name="VMA_POOL_CREATE_ALGORITHM_MASK" />
		<enum value="0x7FFFFFFF" name="VMA_POOL_CREATE_FLAG_BITS_MAX_ENUM" />
	</enums>
	<enums name="VmaDefragmentationFlagBits" type="bitmask">
		<enum value="0x7FFFFFFF" name="VMA_DEFRAGMENTATION_FLAG_BITS_MAX_ENUM" />
	</enums>
	<comment></comment>
	<comment>Command definitions</comment>
	<commands>
		<command successcodes="VK_SUCCESS" errorcodes="VK_SUCCESS, VK_NOT_READY, VK_TIMEOUT, VK_EVENT_SET, VK_EVENT_RESET, VK_INCOMPLETE, VK_ERROR_OUT_OF_HOST_MEMORY, VK_ERROR_OUT_OF_DEVICE_MEMORY, VK_ERROR_INITIALIZATION_FAILED, VK_ERROR_DEVICE_LOST, VK_ERROR_MEMORY_MAP_FAILED, VK_ERROR_LAYER_NOT_PRESENT, VK_ERROR_EXTENSION_NOT_PRESENT, VK_ERROR_FEATURE_NOT_PRESENT, VK_ERROR_INCOMPATIBLE_DRIVER, VK_ERROR_TOO_MANY_OBJECTS, VK_ERROR_FORMAT_NOT_SUPPORTED, VK_ERROR_FRAGMENTED_POOL, VK_ERROR_UNKNOWN, VK_ERROR_OUT_OF_POOL_MEMORY, VK_ERROR_INVALID_EXTERNAL_HANDLE, VK_ERROR_FRAGMENTATION, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS, VK_ERROR_SURFACE_LOST_KHR, VK_ERROR_NATIVE_WINDOW_IN_USE_KHR, VK_SUBOPTIMAL_KHR, VK_ERROR_OUT_OF_DATE_KHR, VK_ERROR_INCOMPATIBLE_DISPLAY_KHR, VK_ERROR_VALIDATION_FAILED_EXT, VK_ERROR_INVALID_SHADER_NV, VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT, VK_ERROR_NOT_PERMITTED_EXT, VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT, VK_THREAD_IDLE_KHR, VK_THREAD_DONE_KHR, VK_OPERATION_DEFERRED_KHR, VK_OPERATION_NOT_DEFERRED_KHR, VK_PIPELINE_COMPILE_REQUIRED_EXT, VK_ERROR_OUT_OF_POOL_MEMORY_KHR, VK_ERROR_INVALID_EXTERNAL_HANDLE_KHR, VK_ERROR_FRAGMENTATION_EXT, VK_ERROR_INVALID_DEVICE_ADDRESS_EXT, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR, VK_ERROR_PIPELINE_COMPILE_REQUIRED_EXT">
			<proto>
				<type>VkResult</type> <name>vmaCreateAllocator</name>
			</proto>
			<param>
				<type>const VmaAllocatorCreateInfo *</type> <name>pCreateInfo</name>
			</param>
			<param>
				<type>VmaAllocator *</type> <name>pAllocator</name>
			</param>
		</command>
		<command>
			<proto>
				<type>void</type> <name>vmaDestroyAllocator</name>
			</proto>
			<param>
				<type>VmaAllocator</type> <name>allocator</name>
			</param>
		</command>
		<command>
			<proto>
				<type>void</type> <name>vmaGetPhysicalDeviceProperties</name>
			</proto>
			<param>
				<type>VmaAllocator</type> <name>allocator</name>
			</param>
			<param>
				<type>const VkPhysicalDeviceProperties **</type> <name>ppPhysicalDeviceProperties</name>
			</param>
		</command>
		<command>
			<proto>
				<type>void</type> <name>vmaGetMemoryProperties</name>
			</proto>
			<param>
				<type>VmaAllocator</type> <name>allocator</name>
			</param>
			<param>
				<type>const VkPhysicalDeviceMemoryProperties **</type> <name>ppPhysicalDeviceMemoryProperties</name>
			</param>
		</command>
		<command>
			<proto>
				<type>void</type> <name>vmaGetMemoryTypeProperties</name>
			</proto>
			<param>
				<type>VmaAllocator</type> <name>allocator</name>
			</param>
			<param>
				<type>uint32_t</type> <name>memoryTypeIndex</name>
			</param>
			<param>
				<type>VkMemoryPropertyFlags *</type> <name>pFlags</name>
			</param>
		</command>
		<command>
			<proto>
				<type>void</type> <name>vmaSetCurrentFrameIndex</name>
			</proto>
			<param>
				<type>VmaAllocator</type> <name>allocator</name>
			</param>
			<param>
				<type>uint32_t</type> <name>frameIndex</name>
			</param>
		</command>
		<command>
			<proto>
				<type>void</type> <name>vmaCalculateStats</name>
			</proto>
			<param>
				<type>VmaAllocator</type> <name>allocator</name>
			</param>
			<param>
				<type>VmaStats *</type> <name>pStats</name>
			</param>
		</command>
		<command>
			<proto>
				<type>void</type> <name>vmaGetBudget</name>
			</proto>
			<param>
				<type>VmaAllocator</type> <name>allocator</name>
			</param>
			<param>
				<type>VmaBudget *</type> <name>pBudget</name>
			</param>
		</command>
		<command>
			<proto>
				<type>void</type> <name>vmaBuildStatsString</name>
			</proto>
			<param>
				<type>VmaAllocator</type> <name>allocator</name>
			</param>
			<param>
				<type>char **</type> <name>ppStatsString</name>
			</param>
			<param>
				<type>VkBool32</type> <name>detailedMap</name>
			</param>
		</command>
		<command>
			<proto>
				<type>void</type> <name>vmaFreeStatsString</name>
			</proto>
			<param>
				<type>VmaAllocator</type> <name>allocator</name>
			</param>
			<param>
				<type>char *</type> <name>pStatsString</name>
			</param>
		</command>
		<command successcodes="VK_SUCCESS" errorcodes="VK_SUCCESS, VK_NOT_READY, VK_TIMEOUT, VK_EVENT_SET, VK_EVENT_RESET, VK_INCOMPLETE, VK_ERROR_OUT_OF_HOST_MEMORY, VK_ERROR_OUT_OF_DEVICE_MEMORY, VK_ERROR_INITIALIZATION_FAILED, VK_ERROR_DEVICE_LOST, VK_ERROR_MEMORY_MAP_FAILED, VK_ERROR_LAYER_NOT_PRESENT, VK_ERROR_EXTENSION_NOT_PRESENT, VK_ERROR_FEATURE_NOT_PRESENT, VK_ERROR_INCOMPATIBLE_DRIVER, VK_ERROR_TOO_MANY_OBJECTS, VK_ERROR_FORMAT_NOT_SUPPORTED, VK_ERROR_FRAGMENTED_POOL, VK_ERROR_UNKNOWN, VK_ERROR_OUT_OF_POOL_MEMORY, VK_ERROR_INVALID_EXTERNAL_HANDLE, VK_ERROR_FRAGMENTATION, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS, VK_ERROR_SURFACE_LOST_KHR, VK_ERROR_NATIVE_WINDOW_IN_USE_KHR, VK_SUBOPTIMAL_KHR, VK_ERROR_OUT_OF_DATE_KHR, VK_ERROR_INCOMPATIBLE_DISPLAY_KHR, VK_ERROR_VALIDATION_FAILED_EXT, VK_ERROR_INVALID_SHADER_NV, VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT, VK_ERROR_NOT_PERMITTED_EXT, VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT, VK_THREAD_IDLE_KHR, VK_THREAD_DONE_KHR, VK_OPERATION_DEFERRED_KHR, VK_OPERATION_NOT_DEFERRED_KHR, VK_PIPELINE_COMPILE_REQUIRED_EXT, VK_ERROR_OUT_OF_POOL_MEMORY_KHR, VK_ERROR_INVALID_EXTERNAL_HANDLE_KHR, VK_ERROR_FRAGMENTATION_EXT, VK_ERROR_INVALID_DEVICE_ADDRESS_EXT, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR, VK_ERROR_PIPELINE_COMPILE_REQUIRED_EXT">
			<proto>
				<type>VkResult</type> <name>vmaFindMemoryTypeIndex</name>
			</proto>
			<param>
				<type>VmaAllocator</type> <name>allocator</name>
			</param>
			<param>
				<type>uint32_t</type> <name>memoryTypeBits</name>
			</param>
			<param>
				<type>const VmaAllocationCreateInfo *</type> <name>pAllocationCreateInfo</name>
			</param>
			<param>
				<type>uint32_t *</type> <name>pMemoryTypeIndex</name>
			</param>
		</command>
		<command successcodes="VK_SUCCESS" errorcodes="VK_SUCCESS, VK_NOT_READY, VK_TIMEOUT, VK_EVENT_SET, VK_EVENT_RESET, VK_INCOMPLETE, VK_ERROR_OUT_OF_HOST_MEMORY, VK_ERROR_OUT_OF_DEVICE_MEMORY, VK_ERROR_INITIALIZATION_FAILED, VK_ERROR_DEVICE_LOST, VK_ERROR_MEMORY_MAP_FAILED, VK_ERROR_LAYER_NOT_PRESENT, VK_ERROR_EXTENSION_NOT_PRESENT, VK_ERROR_FEATURE_NOT_PRESENT, VK_ERROR_INCOMPATIBLE_DRIVER, VK_ERROR_TOO_MANY_OBJECTS, VK_ERROR_FORMAT_NOT_SUPPORTED, VK_ERROR_FRAGMENTED_POOL, VK_ERROR_UNKNOWN, VK_ERROR_OUT_OF_POOL_MEMORY, VK_ERROR_INVALID_EXTERNAL_HANDLE, VK_ERROR_FRAGMENTATION, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS, VK_ERROR_SURFACE_LOST_KHR, VK_ERROR_NATIVE_WINDOW_IN_USE_KHR, VK_SUBOPTIMAL_KHR, VK_ERROR_OUT_OF_DATE_KHR, VK_ERROR_INCOMPATIBLE_DISPLAY_KHR, VK_ERROR_VALIDATION_FAILED_EXT, VK_ERROR_INVALID_SHADER_NV, VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT, VK_ERROR_NOT_PERMITTED_EXT, VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT, VK_THREAD_IDLE_KHR, VK_THREAD_DONE_KHR, VK_OPERATION_DEFERRED_KHR, VK_OPERATION_NOT_DEFERRED_KHR, VK_PIPELINE_COMPILE_REQUIRED_EXT, VK_ERROR_OUT_OF_POOL_MEMORY_KHR, VK_ERROR_INVALID_EXTERNAL_HANDLE_KHR, VK_ERROR_FRAGMENTATION_EXT, VK_ERROR_INVALID_DEVICE_ADDRESS_EXT, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR, VK_ERROR_PIPELINE_COMPILE_REQUIRED_EXT">
			<proto>
				<type>VkResult</type> <name>vmaFindMemoryTypeIndexForBufferInfo</name>
			</proto>
			<param>
				<type>VmaAllocator</type> <name>allocator</name>
			</param>
			<param>
				<type>const VkBufferCreateInfo *</type> <name>pBufferCreateInfo</name>
			</param>
			<param>
				<type>const VmaAllocationCreateInfo *</type> <name>pAllocationCreateInfo</name>
			</param>
			<param>
				<type>uint32_t *</type> <name>pMemoryTypeIndex</name>
			</param>
		</command>
		<command successcodes="VK_SUCCESS" errorcodes="VK_SUCCESS, VK_NOT_READY, VK_TIMEOUT, VK_EVENT_SET, VK_EVENT_RESET, VK_INCOMPLETE, VK_ERROR_OUT_OF_HOST_MEMORY, VK_ERROR_OUT_OF_DEVICE_MEMORY, VK_ERROR_INITIALIZATION_FAILED, VK_ERROR_DEVICE_LOST, VK_ERROR_MEMORY_MAP_FAILED, VK_ERROR_LAYER_NOT_PRESENT, VK_ERROR_EXTENSION_NOT_PRESENT, VK_ERROR_FEATURE_NOT_PRESENT, VK_ERROR_INCOMPATIBLE_DRIVER, VK_ERROR_TOO_MANY_OBJECTS, VK_ERROR_FORMAT_NOT_SUPPORTED, VK_ERROR_FRAGMENTED_POOL, VK_ERROR_UNKNOWN, VK_ERROR_OUT_OF_POOL_MEMORY, VK_ERROR_INVALID_EXTERNAL_HANDLE, VK_ERROR_FRAGMENTATION, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS, VK_ERROR_SURFACE_LOST_KHR, VK_ERROR_NATIVE_WINDOW_IN_USE_KHR, VK_SUBOPTIMAL_KHR, VK_ERROR_OUT_OF_DATE_KHR, VK_ERROR_INCOMPATIBLE_DISPLAY_KHR, VK_ERROR_VALIDATION_FAILED_EXT, VK_ERROR_INVALID_SHADER_NV, VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT, VK_ERROR_NOT_PERMITTED_EXT, VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT, VK_THREAD_IDLE_KHR, VK_THREAD_DONE_KHR, VK_OPERATION_DEFERRED_KHR, VK_OPERATION_NOT_DEFERRED_KHR, VK_PIPELINE_COMPILE_REQUIRED_EXT, VK_ERROR_OUT_OF_POOL_MEMORY_KHR, VK_ERROR_INVALID_EXTERNAL_HANDLE_KHR, VK_ERROR_FRAGMENTATION_EXT, VK_ERROR_INVALID_DEVICE_ADDRESS_EXT, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR, VK_ERROR_PIPELINE_COMPILE_REQUIRED_EXT">
			<proto>
				<type>VkResult</type> <name>vmaFindMemoryTypeIndexForImageInfo</name>
			</proto>
			<param>
				<type>VmaAllocator</type> <name>allocator</name>
			</param>
			<param>
				<type>const VkImageCreateInfo *</type> <name>pImageCreateInfo</name>
			</param>
			<param>
				<type>const VmaAllocationCreateInfo *</type> <name>pAllocationCreateInfo</name>
			</param>
			<param>
				<type>uint32_t *</type> <name>pMemoryTypeIndex</name>
			</param>
		</command>
		<command successcodes="VK_SUCCESS" errorcodes="VK_SUCCESS, VK_NOT_READY, VK_TIMEOUT, VK_EVENT_SET, VK_EVENT_RESET, VK_INCOMPLETE, VK_ERROR_OUT_OF_HOST_MEMORY, VK_ERROR_OUT_OF_DEVICE_MEMORY, VK_ERROR_INITIALIZATION_FAILED, VK_ERROR_DEVICE_LOST, VK_ERROR_MEMORY_MAP_FAILED, VK_ERROR_LAYER_NOT_PRESENT, VK_ERROR_EXTENSION_NOT_PRESENT, VK_ERROR_FEATURE_NOT_PRESENT, VK_ERROR_INCOMPATIBLE_DRIVER, VK_ERROR_TOO_MANY_OBJECTS, VK_ERROR_FORMAT_NOT_SUPPORTED, VK_ERROR_FRAGMENTED_POOL, VK_ERROR_UNKNOWN, VK_ERROR_OUT_OF_POOL_MEMORY, VK_ERROR_INVALID_EXTERNAL_HANDLE, VK_ERROR_FRAGMENTATION, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS, VK_ERROR_SURFACE_LOST_KHR, VK_ERROR_NATIVE_WINDOW_IN_USE_KHR, VK_SUBOPTIMAL_KHR, VK_ERROR_OUT_OF_DATE_KHR, VK_ERROR_INCOMPATIBLE_DISPLAY_KHR, VK_ERROR_VALIDATION_FAILED_EXT, VK_ERROR_INVALID_SHADER_NV, VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT, VK_ERROR_NOT_PERMITTED_EXT, VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT, VK_THREAD_IDLE_KHR, VK_THREAD_DONE_KHR, VK_OPERATION_DEFERRED_KHR, VK_OPERATION_NOT_DEFERRED_KHR, VK_PIPELINE_COMPILE_REQUIRED_EXT, VK_ERROR_OUT_OF_POOL_MEMORY_KHR, VK_ERROR_INVALID_EXTERNAL_HANDLE_KHR, VK_ERROR_FRAGMENTATION_EXT, VK_ERROR_INVALID_DEVICE_ADDRESS_EXT, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR, VK_ERROR_PIPELINE_COMPILE_REQUIRED_EXT">
			<proto>
				<type>VkResult</type> <name>vmaCreatePool</name>
			</proto>
			<param>
				<type>VmaAllocator</type> <name>allocator</name>
			</param>
			<param>
				<type>const VmaPoolCreateInfo *</type> <name>pCreateInfo</name>
			</param>
			<param>
				<type>VmaPool *</type> <name>pPool</name>
			</param>
		</command>
		<command>
			<proto>
				<type>void</type> <name>vmaDestroyPool</name>
			</proto>
			<param>
				<type>VmaAllocator</type> <name>allocator</name>
			</param>
			<param>
				<type>VmaPool</type> <name>pool</name>
			</param>
		</command>
		<command>
			<proto>
				<type>void</type> <name>vmaGetPoolStats</name>
			</proto>
			<param>
				<type>VmaAllocator</type> <name>allocator</name>
			</param>
			<param>
				<type>VmaPool</type> <name>pool</name>
			</param>
			<param>
				<type>VmaPoolStats *</type> <name>pPoolStats</name>
			</param>
		</command>
		<command>
			<proto>
				<type>void</type> <name>vmaMakePoolAllocationsLost</name>
			</proto>
			<param>
				<type>VmaAllocator</type> <name>allocator</name>
			</param>
			<param>
				<type>VmaPool</type> <name>pool</name>
			</param>
			<param>
				<type>size_t *</type> <name>pLostAllocationCount</name>
			</param>
		</command>
		<command successcodes="VK_SUCCESS" errorcodes="VK_SUCCESS, VK_NOT_READY, VK_TIMEOUT, VK_EVENT_SET, VK_EVENT_RESET, VK_INCOMPLETE, VK_ERROR_OUT_OF_HOST_MEMORY, VK_ERROR_OUT_OF_DEVICE_MEMORY, VK_ERROR_INITIALIZATION_FAILED, VK_ERROR_DEVICE_LOST, VK_ERROR_MEMORY_MAP_FAILED, VK_ERROR_LAYER_NOT_PRESENT, VK_ERROR_EXTENSION_NOT_PRESENT, VK_ERROR_FEATURE_NOT_PRESENT, VK_ERROR_INCOMPATIBLE_DRIVER, VK_ERROR_TOO_MANY_OBJECTS, VK_ERROR_FORMAT_NOT_SUPPORTED, VK_ERROR_FRAGMENTED_POOL, VK_ERROR_UNKNOWN, VK_ERROR_OUT_OF_POOL_MEMORY, VK_ERROR_INVALID_EXTERNAL_HANDLE, VK_ERROR_FRAGMENTATION, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS, VK_ERROR_SURFACE_LOST_KHR, VK_ERROR_NATIVE_WINDOW_IN_USE_KHR, VK_SUBOPTIMAL_KHR, VK_ERROR_OUT_OF_DATE_KHR, VK_ERROR_INCOMPATIBLE_DISPLAY_KHR, VK_ERROR_VALIDATION_FAILED_EXT, VK_ERROR_INVALID_SHADER_NV, VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT, VK_ERROR_NOT_PERMITTED_EXT, VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT, VK_THREAD_IDLE_KHR, VK_THREAD_DONE_KHR, VK_OPERATION_DEFERRED_KHR, VK_OPERATION_NOT_DEFERRED_KHR, VK_PIPELINE_COMPILE_REQUIRED_EXT, VK_ERROR_OUT_OF_POOL_MEMORY_KHR, VK_ERROR_INVALID_EXTERNAL_HANDLE_KHR, VK_ERROR_FRAGMENTATION_EXT, VK_ERROR_INVALID_DEVICE_ADDRESS_EXT, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR, VK_ERROR_PIPELINE_COMPILE_REQUIRED_EXT">
			<proto>
				<type>VkResult</type> <name>vmaCheckPoolCorruption</name>
			</proto>
			<param>
				<type>VmaAllocator</type> <name>allocator</name>
			</param>
			<param>
				<type>VmaPool</type> <name>pool</name>
			</param>
		</command>
		<command>
			<proto>
				<type>void</type> <name>vmaGetPoolName</name>
			</proto>
			<param>
				<type>VmaAllocator</type> <name>allocator</name>
			</param>
			<param>
				<type>VmaPool</type> <name>pool</name>
			</param>
			<param>
				<type>const char **</type> <name>ppName</name>
			</param>
		</command>
		<command>
			<proto>
				<type>void</type> <name>vmaSetPoolName</name>
			</proto>
			<param>
				<type>VmaAllocator</type> <name>allocator</name>
			</param>
			<param>
				<type>VmaPool</type> <name>pool</name>
			</param>
			<param>
				<type>const char *</type> <name>pName</name>
			</param>
		</command>
		<command successcodes="VK_SUCCESS" errorcodes="VK_SUCCESS, VK_NOT_READY, VK_TIMEOUT, VK_EVENT_SET, VK_EVENT_RESET, VK_INCOMPLETE, VK_ERROR_OUT_OF_HOST_MEMORY, VK_ERROR_OUT_OF_DEVICE_MEMORY, VK_ERROR_INITIALIZATION_FAILED, VK_ERROR_DEVICE_LOST, VK_ERROR_MEMORY_MAP_FAILED, VK_ERROR_LAYER_NOT_PRESENT, VK_ERROR_EXTENSION_NOT_PRESENT, VK_ERROR_FEATURE_NOT_PRESENT, VK_ERROR_INCOMPATIBLE_DRIVER, VK_ERROR_TOO_MANY_OBJECTS, VK_ERROR_FORMAT_NOT_SUPPORTED, VK_ERROR_FRAGMENTED_POOL, VK_ERROR_UNKNOWN, VK_ERROR_OUT_OF_POOL_MEMORY, VK_ERROR_INVALID_EXTERNAL_HANDLE, VK_ERROR_FRAGMENTATION, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS, VK_ERROR_SURFACE_LOST_KHR, VK_ERROR_NATIVE_WINDOW_IN_USE_KHR, VK_SUBOPTIMAL_KHR, VK_ERROR_OUT_OF_DATE_KHR, VK_ERROR_INCOMPATIBLE_DISPLAY_KHR, VK_ERROR_VALIDATION_FAILED_EXT, VK_ERROR_INVALID_SHADER_NV, VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT, VK_ERROR_NOT_PERMITTED_EXT, VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT, VK_THREAD_IDLE_KHR, VK_THREAD_DONE_KHR, VK_OPERATION_DEFERRED_KHR, VK_OPERATION_NOT_DEFERRED_KHR, VK_PIPELINE_COMPILE_REQUIRED_EXT, VK_ERROR_OUT_OF_POOL_MEMORY_KHR, VK_ERROR_INVALID_EXTERNAL_HANDLE_KHR, VK_ERROR_FRAGMENTATION_EXT, VK_ERROR_INVALID_DEVICE_ADDRESS_EXT, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR, VK_ERROR_PIPELINE_COMPILE_REQUIRED_EXT">
			<proto>
				<type>VkResult</type> <name>vmaAllocateMemory</name>
			</proto>
			<param>
				<type>VmaAllocator</type> <name>allocator</name>
			</param>
			<param>
				<type>const VkMemoryRequirements *</type> <name>pVkMemoryRequirements</name>
			</param>
			<param>
				<type>const VmaAllocationCreateInfo *</type> <name>pCreateInfo</name>
			</param>
			<param>
				<type>VmaAllocation *</type> <name>pAllocation</name>
			</param>
			<param>
				<type>VmaAllocationInfo *</type> <name>pAllocationInfo</name>
			</param>
		</command>
		<command successcodes="VK_SUCCESS" errorcodes="VK_SUCCESS, VK_NOT_READY, VK_TIMEOUT, VK_EVENT_SET, VK_EVENT_RESET, VK_INCOMPLETE, VK_ERROR_OUT_OF_HOST_MEMORY, VK_ERROR_OUT_OF_DEVICE_MEMORY, VK_ERROR_INITIALIZATION_FAILED, VK_ERROR_DEVICE_LOST, VK_ERROR_MEMORY_MAP_FAILED, VK_ERROR_LAYER_NOT_PRESENT, VK_ERROR_EXTENSION_NOT_PRESENT, VK_ERROR_FEATURE_NOT_PRESENT, VK_ERROR_INCOMPATIBLE_DRIVER, VK_ERROR_TOO_MANY_OBJECTS, VK_ERROR_FORMAT_NOT_SUPPORTED, VK_ERROR_FRAGMENTED_POOL, VK_ERROR_UNKNOWN, VK_ERROR_OUT_OF_POOL_MEMORY, VK_ERROR_INVALID_EXTERNAL_HANDLE, VK_ERROR_FRAGMENTATION, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS, VK_ERROR_SURFACE_LOST_KHR, VK_ERROR_NATIVE_WINDOW_IN_USE_KHR, VK_SUBOPTIMAL_KHR, VK_ERROR_OUT_OF_DATE_KHR, VK_ERROR_INCOMPATIBLE_DISPLAY_KHR, VK_ERROR_VALIDATION_FAILED_EXT, VK_ERROR_INVALID_SHADER_NV, VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT, VK_ERROR_NOT_PERMITTED_EXT, VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT, VK_THREAD_IDLE_KHR, VK_THREAD_DONE_KHR, VK_OPERATION_DEFERRED_KHR, VK_OPERATION_NOT_DEFERRED_KHR, VK_PIPELINE_COMPILE_REQUIRED_EXT, VK_ERROR_OUT_OF_POOL_MEMORY_KHR, VK_ERROR_INVALID_EXTERNAL_HANDLE_KHR, VK_ERROR_FRAGMENTATION_EXT, VK_ERROR_INVALID_DEVICE_ADDRESS_EXT, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR, VK_ERROR_PIPELINE_COMPILE_REQUIRED_EXT">
			<proto>
				<type>VkResult</type> <name>vmaAllocateMemoryPages</name>
			</proto>
			<param>
				<type>VmaAllocator</type> <name>allocator</name>
			</param>
			<param>
				<type>const VkMemoryRequirements *</type> <name>pVkMemoryRequirements</name>
			</param>
			<param>
				<type>const VmaAllocationCreateInfo *</type> <name>pCreateInfo</name>
			</param>
			<param>
				<type>size_t</type> <name>allocationCount</name>
			</param>
			<param>
				<type>VmaAllocation *</type> <name>pAllocations</name>
			</param>
			<param>
				<type>VmaAllocationInfo *</type> <name>pAllocationInfo</name>
			</param>
		</command>
		<command successcodes="VK_SUCCESS" errorcodes="VK_SUCCESS, VK_NOT_READY, VK_TIMEOUT, VK_EVENT_SET, VK_EVENT_RESET, VK_INCOMPLETE, VK_ERROR_OUT_OF_HOST_MEMORY, VK_ERROR_OUT_OF_DEVICE_MEMORY, VK_ERROR_INITIALIZATION_FAILED, VK_ERROR_DEVICE_LOST, VK_ERROR_MEMORY_MAP_FAILED, VK_ERROR_LAYER_NOT_PRESENT, VK_ERROR_EXTENSION_NOT_PRESENT, VK_ERROR_FEATURE_NOT_PRESENT, VK_ERROR_INCOMPATIBLE_DRIVER, VK_ERROR_TOO_MANY_OBJECTS, VK_ERROR_FORMAT_NOT_SUPPORTED, VK_ERROR_FRAGMENTED_POOL, VK_ERROR_UNKNOWN, VK_ERROR_OUT_OF_POOL_MEMORY, VK_ERROR_INVALID_EXTERNAL_HANDLE, VK_ERROR_FRAGMENTATION, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS, VK_ERROR_SURFACE_LOST_KHR, VK_ERROR_NATIVE_WINDOW_IN_USE_KHR, VK_SUBOPTIMAL_KHR, VK_ERROR_OUT_OF_DATE_KHR, VK_ERROR_INCOMPATIBLE_DISPLAY_KHR, VK_ERROR_VALIDATION_FAILED_EXT, VK_ERROR_INVALID_SHADER_NV, VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT, VK_ERROR_NOT_PERMITTED_EXT, VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT, VK_THREAD_IDLE_KHR, VK_THREAD_DONE_KHR, VK_OPERATION_DEFERRED_KHR, VK_OPERATION_NOT_DEFERRED_KHR, VK_PIPELINE_COMPILE_REQUIRED_EXT, VK_ERROR_OUT_OF_POOL_MEMORY_KHR, VK_ERROR_INVALID_EXTERNAL_HANDLE_KHR, VK_ERROR_FRAGMENTATION_EXT, VK_ERROR_INVALID_DEVICE_ADDRESS_EXT, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR, VK_ERROR_PIPELINE_COMPILE_REQUIRED_EXT">
			<proto>
				<type>VkResult</type> <name>vmaAllocateMemoryForBuffer</name>
			</proto>
			<param>
				<type>VmaAllocator</type> <name>allocator</name>
			</param>
			<param>
				<type>VkBuffer</type> <name>buffer</name>
			</param>
			<param>
				<type>const VmaAllocationCreateInfo *</type> <name>pCreateInfo</name>
			</param>
			<param>
				<type>VmaAllocation *</type> <name>pAllocation</name>
			</param>
			<param>
				<type>VmaAllocationInfo *</type> <name>pAllocationInfo</name>
			</param>
		</command>
		<command successcodes="VK_SUCCESS" errorcodes="VK_SUCCESS, VK_NOT_READY, VK_TIMEOUT, VK_EVENT_SET, VK_EVENT_RESET, VK_INCOMPLETE, VK_ERROR_OUT_OF_HOST_MEMORY, VK_ERROR_OUT_OF_DEVICE_MEMORY, VK_ERROR_INITIALIZATION_FAILED, VK_ERROR_DEVICE_LOST, VK_ERROR_MEMORY_MAP_FAILED, VK_ERROR_LAYER_NOT_PRESENT, VK_ERROR_EXTENSION_NOT_PRESENT, VK_ERROR_FEATURE_NOT_PRESENT, VK_ERROR_INCOMPATIBLE_DRIVER, VK_ERROR_TOO_MANY_OBJECTS, VK_ERROR_FORMAT_NOT_SUPPORTED, VK_ERROR_FRAGMENTED_POOL, VK_ERROR_UNKNOWN, VK_ERROR_OUT_OF_POOL_MEMORY, VK_ERROR_INVALID_EXTERNAL_HANDLE, VK_ERROR_FRAGMENTATION, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS, VK_ERROR_SURFACE_LOST_KHR, VK_ERROR_NATIVE_WINDOW_IN_USE_KHR, VK_SUBOPTIMAL_KHR, VK_ERROR_OUT_OF_DATE_KHR, VK_ERROR_INCOMPATIBLE_DISPLAY_KHR, VK_ERROR_VALIDATION_FAILED_EXT, VK_ERROR_INVALID_SHADER_NV, VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT, VK_ERROR_NOT_PERMITTED_EXT, VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT, VK_THREAD_IDLE_KHR, VK_THREAD_DONE_KHR, VK_OPERATION_DEFERRED_KHR, VK_OPERATION_NOT_DEFERRED_KHR, VK_PIPELINE_COMPILE_REQUIRED_EXT, VK_ERROR_OUT_OF_POOL_MEMORY_KHR, VK_ERROR_INVALID_EXTERNAL_HANDLE_KHR, VK_ERROR_FRAGMENTATION_EXT, VK_ERROR_INVALID_DEVICE_ADDRESS_EXT, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR, VK_ERROR_PIPELINE_COMPILE_REQUIRED_EXT">
			<proto>
				<type>VkResult</type> <name>vmaAllocateMemoryForImage</name>
			</proto>
			<param>
				<type>VmaAllocator</type> <name>allocator</name>
			</param>
			<param>
				<type>VkImage</type> <name>image</name>
			</param>
			<param>
				<type>const VmaAllocationCreateInfo *</type> <name>pCreateInfo</name>
			</param>
			<param>
				<type>VmaAllocation *</type> <name>pAllocation</name>
			</param>
			<param>
				<type>VmaAllocationInfo *</type> <name>pAllocationInfo</name>
			</param>
		</command>
		<command>
			<proto>
				<type>void</type> <name>vmaFreeMemory</name>
			</proto>
			<param>
				<type>VmaAllocator</type> <name>allocator</name>
			</param>
			<param>
				<type>VmaAllocation</type> <name>allocation</name>
			</param>
		</command>
		<command>
			<proto>
				<type>void</type> <name>vmaFreeMemoryPages</name>
			</proto>
			<param>
				<type>VmaAllocator</type> <name>allocator</name>
			</param>
			<param>
				<type>size_t</type> <name>allocationCount</name>
			</param>
			<param>
				<type>VmaAllocation *</type> <name>pAllocations</name>
			</param>
		</command>
		<command successcodes="VK_SUCCESS" errorcodes="VK_SUCCESS, VK_NOT_READY, VK_TIMEOUT, VK_EVENT_SET, VK_EVENT_RESET, VK_INCOMPLETE, VK_ERROR_OUT_OF_HOST_MEMORY, VK_ERROR_OUT_OF_DEVICE_MEMORY, VK_ERROR_INITIALIZATION_FAILED, VK_ERROR_DEVICE_LOST, VK_ERROR_MEMORY_MAP_FAILED, VK_ERROR_LAYER_NOT_PRESENT, VK_ERROR_EXTENSION_NOT_PRESENT, VK_ERROR_FEATURE_NOT_PRESENT, VK_ERROR_INCOMPATIBLE_DRIVER, VK_ERROR_TOO_MANY_OBJECTS, VK_ERROR_FORMAT_NOT_SUPPORTED, VK_ERROR_FRAGMENTED_POOL, VK_ERROR_UNKNOWN, VK_ERROR_OUT_OF_POOL_MEMORY, VK_ERROR_INVALID_EXTERNAL_HANDLE, VK_ERROR_FRAGMENTATION, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS, VK_ERROR_SURFACE_LOST_KHR, VK_ERROR_NATIVE_WINDOW_IN_USE_KHR, VK_SUBOPTIMAL_KHR, VK_ERROR_OUT_OF_DATE_KHR, VK_ERROR_INCOMPATIBLE_DISPLAY_KHR, VK_ERROR_VALIDATION_FAILED_EXT, VK_ERROR_INVALID_SHADER_NV, VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT, VK_ERROR_NOT_PERMITTED_EXT, VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT, VK_THREAD_IDLE_KHR, VK_THREAD_DONE_KHR, VK_OPERATION_DEFERRED_KHR, VK_OPERATION_NOT_DEFERRED_KHR, VK_PIPELINE_COMPILE_REQUIRED_EXT, VK_ERROR_OUT_OF_POOL_MEMORY_KHR, VK_ERROR_INVALID_EXTERNAL_HANDLE_KHR, VK_ERROR_FRAGMENTATION_EXT, VK_ERROR_INVALID_DEVICE_ADDRESS_EXT, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR, VK_ERROR_PIPELINE_COMPILE_REQUIRED_EXT">
			<proto>
				<type>VkResult</type> <name>vmaResizeAllocation</name>
			</proto>
			<param>
				<type>VmaAllocator</type> <name>allocator</name>
			</param>
			<param>
				<type>VmaAllocation</type> <name>allocation</name>
			</param>
			<param>
				<type>VkDeviceSize</type> <name>newSize</name>
			</param>
		</command>
		<command>
			<proto>
				<type>void</type> <name>vmaGetAllocationInfo</name>
			</proto>
			<param>
				<type>VmaAllocator</type> <name>allocator</name>
			</param>
			<param>
				<type>VmaAllocation</type> <name>allocation</name>
			</param>
			<param>
				<type>VmaAllocationInfo *</type> <name>pAllocationInfo</name>
			</param>
		</command>
		<command>
			<proto>
				<type>VkBool32</type> <name>vmaTouchAllocation</name>
			</proto>
			<param>
				<type>VmaAllocator</type> <name>allocator</name>
			</param>
			<param>
				<type>VmaAllocation</type> <name>allocation</name>
			</param>
		</command>
		<command>
			<proto>
				<type>void</type> <name>vmaSetAllocationUserData</name>
			</proto>
			<param>
				<type>VmaAllocator</type> <name>allocator</name>
			</param>
			<param>
				<type>VmaAllocation</type> <name>allocation</name>
			</param>
			<param>
				<type>void *</type> <name>pUserData</name>
			</param>
		</command>
		<command>
			<proto>
				<type>void</type> <name>vmaCreateLostAllocation</name>
			</proto>
			<param>
				<type>VmaAllocator</type> <name>allocator</name>
			</param>
			<param>
				<type>VmaAllocation *</type> <name>pAllocation</name>
			</param>
		</command>
		<command successcodes="VK_SUCCESS" errorcodes="VK_SUCCESS, VK_NOT_READY, VK_TIMEOUT, VK_EVENT_SET, VK_EVENT_RESET, VK_INCOMPLETE, VK_ERROR_OUT_OF_HOST_MEMORY, VK_ERROR_OUT_OF_DEVICE_MEMORY, VK_ERROR_INITIALIZATION_FAILED, VK_ERROR_DEVICE_LOST, VK_ERROR_MEMORY_MAP_FAILED, VK_ERROR_LAYER_NOT_PRESENT, VK_ERROR_EXTENSION_NOT_PRESENT, VK_ERROR_FEATURE_NOT_PRESENT, VK_ERROR_INCOMPATIBLE_DRIVER, VK_ERROR_TOO_MANY_OBJECTS, VK_ERROR_FORMAT_NOT_SUPPORTED, VK_ERROR_FRAGMENTED_POOL, VK_ERROR_UNKNOWN, VK_ERROR_OUT_OF_POOL_MEMORY, VK_ERROR_INVALID_EXTERNAL_HANDLE, VK_ERROR_FRAGMENTATION, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS, VK_ERROR_SURFACE_LOST_KHR, VK_ERROR_NATIVE_WINDOW_IN_USE_KHR, VK_SUBOPTIMAL_KHR, VK_ERROR_OUT_OF_DATE_KHR, VK_ERROR_INCOMPATIBLE_DISPLAY_KHR, VK_ERROR_VALIDATION_FAILED_EXT, VK_ERROR_INVALID_SHADER_NV, VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT, VK_ERROR_NOT_PERMITTED_EXT, VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT, VK_THREAD_IDLE_KHR, VK_THREAD_DONE_KHR, VK_OPERATION_DEFERRED_KHR, VK_OPERATION_NOT_DEFERRED_KHR, VK_PIPELINE_COMPILE_REQUIRED_EXT, VK_ERROR_OUT_OF_POOL_MEMORY_KHR, VK_ERROR_INVALID_EXTERNAL_HANDLE_KHR, VK_ERROR_FRAGMENTATION_EXT, VK_ERROR_INVALID_DEVICE_ADDRESS_EXT, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR, VK_ERROR_PIPELINE_COMPILE_REQUIRED_EXT">
			<proto>
				<type>VkResult</type> <name>vmaMapMemory</name>
			</proto>
			<param>
				<type>VmaAllocator</type> <name>allocator</name>
			</param>
			<param>
				<type>VmaAllocation</type> <name>allocation</name>
			</param>
			<param>
				<type>void **</type> <name>ppData</name>
			</param>
		</command>
		<command>
			<proto>
				<type>void</type> <name>vmaUnmapMemory</name>
			</proto>
			<param>
				<type>VmaAllocator</type> <name>allocator</name>
			</param>
			<param>
				<type>VmaAllocation</type> <name>allocation</name>
			</param>
		</command>
		<command>
			<proto>
				<type>void</type> <name>vmaFlushAllocation</name>
			</proto>
			<param>
				<type>VmaAllocator</type> <name>allocator</name>
			</param>
			<param>
				<type>VmaAllocation</type> <name>allocation</name>
			</param>
			<param>
				<type>VkDeviceSize</type> <name>offset</name>
			</param>
			<param>
				<type>VkDeviceSize</type> <name>size</name>
			</param>
		</command>
		<command>
			<proto>
				<type>void</type> <name>vmaInvalidateAllocation</name>
			</proto>
			<param>
				<type>VmaAllocator</type> <name>allocator</name>
			</param>
			<param>
				<type>VmaAllocation</type> <name>allocation</name>
			</param>
			<param>
				<type>VkDeviceSize</type> <name>offset</name>
			</param>
			<param>
				<type>VkDeviceSize</type> <name>size</name>
			</param>
		</command>
		<command successcodes="VK_SUCCESS" errorcodes="VK_SUCCESS, VK_NOT_READY, VK_TIMEOUT, VK_EVENT_SET, VK_EVENT_RESET, VK_INCOMPLETE, VK_ERROR_OUT_OF_HOST_MEMORY, VK_ERROR_OUT_OF_DEVICE_MEMORY, VK_ERROR_INITIALIZATION_FAILED, VK_ERROR_DEVICE_LOST, VK_ERROR_MEMORY_MAP_FAILED, VK_ERROR_LAYER_NOT_PRESENT, VK_ERROR_EXTENSION_NOT_PRESENT, VK_ERROR_FEATURE_NOT_PRESENT, VK_ERROR_INCOMPATIBLE_DRIVER, VK_ERROR_TOO_MANY_OBJECTS, VK_ERROR_FORMAT_NOT_SUPPORTED, VK_ERROR_FRAGMENTED_POOL, VK_ERROR_UNKNOWN, VK_ERROR_OUT_OF_POOL_MEMORY, VK_ERROR_INVALID_EXTERNAL_HANDLE, VK_ERROR_FRAGMENTATION, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS, VK_ERROR_SURFACE_LOST_KHR, VK_ERROR_NATIVE_WINDOW_IN_USE_KHR, VK_SUBOPTIMAL_KHR, VK_ERROR_OUT_OF_DATE_KHR, VK_ERROR_INCOMPATIBLE_DISPLAY_KHR, VK_ERROR_VALIDATION_FAILED_EXT, VK_ERROR_INVALID_SHADER_NV, VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT, VK_ERROR_NOT_PERMITTED_EXT, VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT, VK_THREAD_IDLE_KHR, VK_THREAD_DONE_KHR, VK_OPERATION_DEFERRED_KHR, VK_OPERATION_NOT_DEFERRED_KHR, VK_PIPELINE_COMPILE_REQUIRED_EXT, VK_ERROR_OUT_OF_POOL_MEMORY_KHR, VK_ERROR_INVALID_EXTERNAL_HANDLE_KHR, VK_ERROR_FRAGMENTATION_EXT, VK_ERROR_INVALID_DEVICE_ADDRESS_EXT, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR, VK_ERROR_PIPELINE_COMPILE_REQUIRED_EXT">
			<proto>
				<type>VkResult</type> <name>vmaCheckCorruption</name>
			</proto>
			<param>
				<type>VmaAllocator</type> <name>allocator</name>
			</param>
			<param>
				<type>uint32_t</type> <name>memoryTypeBits</name>
			</param>
		</command>
		<command successcodes="VK_SUCCESS" errorcodes="VK_SUCCESS, VK_NOT_READY, VK_TIMEOUT, VK_EVENT_SET, VK_EVENT_RESET, VK_INCOMPLETE, VK_ERROR_OUT_OF_HOST_MEMORY, VK_ERROR_OUT_OF_DEVICE_MEMORY, VK_ERROR_INITIALIZATION_FAILED, VK_ERROR_DEVICE_LOST, VK_ERROR_MEMORY_MAP_FAILED, VK_ERROR_LAYER_NOT_PRESENT, VK_ERROR_EXTENSION_NOT_PRESENT, VK_ERROR_FEATURE_NOT_PRESENT, VK_ERROR_INCOMPATIBLE_DRIVER, VK_ERROR_TOO_MANY_OBJECTS, VK_ERROR_FORMAT_NOT_SUPPORTED, VK_ERROR_FRAGMENTED_POOL, VK_ERROR_UNKNOWN, VK_ERROR_OUT_OF_POOL_MEMORY, VK_ERROR_INVALID_EXTERNAL_HANDLE, VK_ERROR_FRAGMENTATION, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS, VK_ERROR_SURFACE_LOST_KHR, VK_ERROR_NATIVE_WINDOW_IN_USE_KHR, VK_SUBOPTIMAL_KHR, VK_ERROR_OUT_OF_DATE_KHR, VK_ERROR_INCOMPATIBLE_DISPLAY_KHR, VK_ERROR_VALIDATION_FAILED_EXT, VK_ERROR_INVALID_SHADER_NV, VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT, VK_ERROR_NOT_PERMITTED_EXT, VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT, VK_THREAD_IDLE_KHR, VK_THREAD_DONE_KHR, VK_OPERATION_DEFERRED_KHR, VK_OPERATION_NOT_DEFERRED_KHR, VK_PIPELINE_COMPILE_REQUIRED_EXT, VK_ERROR_OUT_OF_POOL_MEMORY_KHR, VK_ERROR_INVALID_EXTERNAL_HANDLE_KHR, VK_ERROR_FRAGMENTATION_EXT, VK_ERROR_INVALID_DEVICE_ADDRESS_EXT, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR, VK_ERROR_PIPELINE_COMPILE_REQUIRED_EXT">
			<proto>
				<type>VkResult</type> <name>vmaDefragmentationBegin</name>
			</proto>
			<param>
				<type>VmaAllocator</type> <name>allocator</name>
			</param>
			<param>
				<type>const VmaDefragmentationInfo2 *</type> <name>pInfo</name>
			</param>
			<param>
				<type>VmaDefragmentationStats *</type> <name>pStats</name>
			</param>
			<param>
				<type>VmaDefragmentationContext *</type> <name>pContext</name>
			</param>
		</command>
		<command successcodes="VK_SUCCESS" errorcodes="VK_SUCCESS, VK_NOT_READY, VK_TIMEOUT, VK_EVENT_SET, VK_EVENT_RESET, VK_INCOMPLETE, VK_ERROR_OUT_OF_HOST_MEMORY, VK_ERROR_OUT_OF_DEVICE_MEMORY, VK_ERROR_INITIALIZATION_FAILED, VK_ERROR_DEVICE_LOST, VK_ERROR_MEMORY_MAP_FAILED, VK_ERROR_LAYER_NOT_PRESENT, VK_ERROR_EXTENSION_NOT_PRESENT, VK_ERROR_FEATURE_NOT_PRESENT, VK_ERROR_INCOMPATIBLE_DRIVER, VK_ERROR_TOO_MANY_OBJECTS, VK_ERROR_FORMAT_NOT_SUPPORTED, VK_ERROR_FRAGMENTED_POOL, VK_ERROR_UNKNOWN, VK_ERROR_OUT_OF_POOL_MEMORY, VK_ERROR_INVALID_EXTERNAL_HANDLE, VK_ERROR_FRAGMENTATION, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS, VK_ERROR_SURFACE_LOST_KHR, VK_ERROR_NATIVE_WINDOW_IN_USE_KHR, VK_SUBOPTIMAL_KHR, VK_ERROR_OUT_OF_DATE_KHR, VK_ERROR_INCOMPATIBLE_DISPLAY_KHR, VK_ERROR_VALIDATION_FAILED_EXT, VK_ERROR_INVALID_SHADER_NV, VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT, VK_ERROR_NOT_PERMITTED_EXT, VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT, VK_THREAD_IDLE_KHR, VK_THREAD_DONE_KHR, VK_OPERATION_DEFERRED_KHR, VK_OPERATION_NOT_DEFERRED_KHR, VK_PIPELINE_COMPILE_REQUIRED_EXT, VK_ERROR_OUT_OF_POOL_MEMORY_KHR, VK_ERROR_INVALID_EXTERNAL_HANDLE_KHR, VK_ERROR_FRAGMENTATION_EXT, VK_ERROR_INVALID_DEVICE_ADDRESS_EXT, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR, VK_ERROR_PIPELINE_COMPILE_REQUIRED_EXT">
			<proto>
				<type>VkResult</type> <name>vmaDefragmentationEnd</name>
			</proto>
			<param>
				<type>VmaAllocator</type> <name>allocator</name>
			</param>
			<param>
				<type>VmaDefragmentationContext</type> <name>context</name>
			</param>
		</command>
		<command successcodes="VK_SUCCESS" errorcodes="VK_SUCCESS, VK_NOT_READY, VK_TIMEOUT, VK_EVENT_SET, VK_EVENT_RESET, VK_INCOMPLETE, VK_ERROR_OUT_OF_HOST_MEMORY, VK_ERROR_OUT_OF_DEVICE_MEMORY, VK_ERROR_INITIALIZATION_FAILED, VK_ERROR_DEVICE_LOST, VK_ERROR_MEMORY_MAP_FAILED, VK_ERROR_LAYER_NOT_PRESENT, VK_ERROR_EXTENSION_NOT_PRESENT, VK_ERROR_FEATURE_NOT_PRESENT, VK_ERROR_INCOMPATIBLE_DRIVER, VK_ERROR_TOO_MANY_OBJECTS, VK_ERROR_FORMAT_NOT_SUPPORTED, VK_ERROR_FRAGMENTED_POOL, VK_ERROR_UNKNOWN, VK_ERROR_OUT_OF_POOL_MEMORY, VK_ERROR_INVALID_EXTERNAL_HANDLE, VK_ERROR_FRAGMENTATION, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS, VK_ERROR_SURFACE_LOST_KHR, VK_ERROR_NATIVE_WINDOW_IN_USE_KHR, VK_SUBOPTIMAL_KHR, VK_ERROR_OUT_OF_DATE_KHR, VK_ERROR_INCOMPATIBLE_DISPLAY_KHR, VK_ERROR_VALIDATION_FAILED_EXT, VK_ERROR_INVALID_SHADER_NV, VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT, VK_ERROR_NOT_PERMITTED_EXT, VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT, VK_THREAD_IDLE_KHR, VK_THREAD_DONE_KHR, VK_OPERATION_DEFERRED_KHR, VK_OPERATION_NOT_DEFERRED_KHR, VK_PIPELINE_COMPILE_REQUIRED_EXT, VK_ERROR_OUT_OF_POOL_MEMORY_KHR, VK_ERROR_INVALID_EXTERNAL_HANDLE_KHR, VK_ERROR_FRAGMENTATION_EXT, VK_ERROR_INVALID_DEVICE_ADDRESS_EXT, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR, VK_ERROR_PIPELINE_COMPILE_REQUIRED_EXT">
			<proto>
				<type>VkResult</type> <name>vmaDefragment</name>
			</proto>
			<param>
				<type>VmaAllocator</type> <name>allocator</name>
			</param>
			<param>
				<type>VmaAllocation *</type> <name>pAllocations</name>
			</param>
			<param>
				<type>size_t</type> <name>allocationCount</name>
			</param>
			<param>
				<type>VkBool32 *</type> <name>pAllocationsChanged</name>
			</param>
			<param>
				<type>const VmaDefragmentationInfo *</type> <name>pDefragmentationInfo</name>
			</param>
			<param>
				<type>VmaDefragmentationStats *</type> <name>pDefragmentationStats</name>
			</param>
		</command>
		<command successcodes="VK_SUCCESS" errorcodes="VK_SUCCESS, VK_NOT_READY, VK_TIMEOUT, VK_EVENT_SET, VK_EVENT_RESET, VK_INCOMPLETE, VK_ERROR_OUT_OF_HOST_MEMORY, VK_ERROR_OUT_OF_DEVICE_MEMORY, VK_ERROR_INITIALIZATION_FAILED, VK_ERROR_DEVICE_LOST, VK_ERROR_MEMORY_MAP_FAILED, VK_ERROR_LAYER_NOT_PRESENT, VK_ERROR_EXTENSION_NOT_PRESENT, VK_ERROR_FEATURE_NOT_PRESENT, VK_ERROR_INCOMPATIBLE_DRIVER, VK_ERROR_TOO_MANY_OBJECTS, VK_ERROR_FORMAT_NOT_SUPPORTED, VK_ERROR_FRAGMENTED_POOL, VK_ERROR_UNKNOWN, VK_ERROR_OUT_OF_POOL_MEMORY, VK_ERROR_INVALID_EXTERNAL_HANDLE, VK_ERROR_FRAGMENTATION, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS, VK_ERROR_SURFACE_LOST_KHR, VK_ERROR_NATIVE_WINDOW_IN_USE_KHR, VK_SUBOPTIMAL_KHR, VK_ERROR_OUT_OF_DATE_KHR, VK_ERROR_INCOMPATIBLE_DISPLAY_KHR, VK_ERROR_VALIDATION_FAILED_EXT, VK_ERROR_INVALID_SHADER_NV, VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT, VK_ERROR_NOT_PERMITTED_EXT, VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT, VK_THREAD_IDLE_KHR, VK_THREAD_DONE_KHR, VK_OPERATION_DEFERRED_KHR, VK_OPERATION_NOT_DEFERRED_KHR, VK_PIPELINE_COMPILE_REQUIRED_EXT, VK_ERROR_OUT_OF_POOL_MEMORY_KHR, VK_ERROR_INVALID_EXTERNAL_HANDLE_KHR, VK_ERROR_FRAGMENTATION_EXT, VK_ERROR_INVALID_DEVICE_ADDRESS_EXT, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR, VK_ERROR_PIPELINE_COMPILE_REQUIRED_EXT">
			<proto>
				<type>VkResult</type> <name>vmaBindBufferMemory</name>
			</proto>
			<param>
				<type>VmaAllocator</type> <name>allocator</name>
			</param>
			<param>
				<type>VmaAllocation</type> <name>allocation</name>
			</param>
			<param>
				<type>VkBuffer</type> <name>buffer</name>
			</param>
		</command>
		<command successcodes="VK_SUCCESS" errorcodes="VK_SUCCESS, VK_NOT_READY, VK_TIMEOUT, VK_EVENT_SET, VK_EVENT_RESET, VK_INCOMPLETE, VK_ERROR_OUT_OF_HOST_MEMORY, VK_ERROR_OUT_OF_DEVICE_MEMORY, VK_ERROR_INITIALIZATION_FAILED, VK_ERROR_DEVICE_LOST, VK_ERROR_MEMORY_MAP_FAILED, VK_ERROR_LAYER_NOT_PRESENT, VK_ERROR_EXTENSION_NOT_PRESENT, VK_ERROR_FEATURE_NOT_PRESENT, VK_ERROR_INCOMPATIBLE_DRIVER, VK_ERROR_TOO_MANY_OBJECTS, VK_ERROR_FORMAT_NOT_SUPPORTED, VK_ERROR_FRAGMENTED_POOL, VK_ERROR_UNKNOWN, VK_ERROR_OUT_OF_POOL_MEMORY, VK_ERROR_INVALID_EXTERNAL_HANDLE, VK_ERROR_FRAGMENTATION, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS, VK_ERROR_SURFACE_LOST_KHR, VK_ERROR_NATIVE_WINDOW_IN_USE_KHR, VK_SUBOPTIMAL_KHR, VK_ERROR_OUT_OF_DATE_KHR, VK_ERROR_INCOMPATIBLE_DISPLAY_KHR, VK_ERROR_VALIDATION_FAILED_EXT, VK_ERROR_INVALID_SHADER_NV, VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT, VK_ERROR_NOT_PERMITTED_EXT, VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT, VK_THREAD_IDLE_KHR, VK_THREAD_DONE_KHR, VK_OPERATION_DEFERRED_KHR, VK_OPERATION_NOT_DEFERRED_KHR, VK_PIPELINE_COMPILE_REQUIRED_EXT, VK_ERROR_OUT_OF_POOL_MEMORY_KHR, VK_ERROR_INVALID_EXTERNAL_HANDLE_KHR, VK_ERROR_FRAGMENTATION_EXT, VK_ERROR_INVALID_DEVICE_ADDRESS_EXT, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR, VK_ERROR_PIPELINE_COMPILE_REQUIRED_EXT">
			<proto>
				<type>VkResult</type> <name>vmaBindBufferMemory2</name>
			</proto>
			<param>
				<type>VmaAllocator</type> <name>allocator</name>
			</param>
			<param>
				<type>VmaAllocation</type> <name>allocation</name>
			</param>
			<param>
				<type>VkDeviceSize</type> <name>allocationLocalOffset</name>
			</param>
			<param>
				<type>VkBuffer</type> <name>buffer</name>
			</param>
			<param>
				<type>const void *</type> <name>pNext</name>
			</param>
		</command>
		<command successcodes="VK_SUCCESS" errorcodes="VK_SUCCESS, VK_NOT_READY, VK_TIMEOUT, VK_EVENT_SET, VK_EVENT_RESET, VK_INCOMPLETE, VK_ERROR_OUT_OF_HOST_MEMORY, VK_ERROR_OUT_OF_DEVICE_MEMORY, VK_ERROR_INITIALIZATION_FAILED, VK_ERROR_DEVICE_LOST, VK_ERROR_MEMORY_MAP_FAILED, VK_ERROR_LAYER_NOT_PRESENT, VK_ERROR_EXTENSION_NOT_PRESENT, VK_ERROR_FEATURE_NOT_PRESENT, VK_ERROR_INCOMPATIBLE_DRIVER, VK_ERROR_TOO_MANY_OBJECTS, VK_ERROR_FORMAT_NOT_SUPPORTED, VK_ERROR_FRAGMENTED_POOL, VK_ERROR_UNKNOWN, VK_ERROR_OUT_OF_POOL_MEMORY, VK_ERROR_INVALID_EXTERNAL_HANDLE, VK_ERROR_FRAGMENTATION, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS, VK_ERROR_SURFACE_LOST_KHR, VK_ERROR_NATIVE_WINDOW_IN_USE_KHR, VK_SUBOPTIMAL_KHR, VK_ERROR_OUT_OF_DATE_KHR, VK_ERROR_INCOMPATIBLE_DISPLAY_KHR, VK_ERROR_VALIDATION_FAILED_EXT, VK_ERROR_INVALID_SHADER_NV, VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT, VK_ERROR_NOT_PERMITTED_EXT, VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT, VK_THREAD_IDLE_KHR, VK_THREAD_DONE_KHR, VK_OPERATION_DEFERRED_KHR, VK_OPERATION_NOT_DEFERRED_KHR, VK_PIPELINE_COMPILE_REQUIRED_EXT, VK_ERROR_OUT_OF_POOL_MEMORY_KHR, VK_ERROR_INVALID_EXTERNAL_HANDLE_KHR, VK_ERROR_FRAGMENTATION_EXT, VK_ERROR_INVALID_DEVICE_ADDRESS_EXT, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR, VK_ERROR_PIPELINE_COMPILE_REQUIRED_EXT">
			<proto>
				<type>VkResult</type> <name>vmaBindImageMemory</name>
			</proto>
			<param>
				<type>VmaAllocator</type> <name>allocator</name>
			</param>
			<param>
				<type>VmaAllocation</type> <name>allocation</name>
			</param>
			<param>
				<type>VkImage</type> <name>image</name>
			</param>
		</command>
		<command successcodes="VK_SUCCESS" errorcodes="VK_SUCCESS, VK_NOT_READY, VK_TIMEOUT, VK_EVENT_SET, VK_EVENT_RESET, VK_INCOMPLETE, VK_ERROR_OUT_OF_HOST_MEMORY, VK_ERROR_OUT_OF_DEVICE_MEMORY, VK_ERROR_INITIALIZATION_FAILED, VK_ERROR_DEVICE_LOST, VK_ERROR_MEMORY_MAP_FAILED, VK_ERROR_LAYER_NOT_PRESENT, VK_ERROR_EXTENSION_NOT_PRESENT, VK_ERROR_FEATURE_NOT_PRESENT, VK_ERROR_INCOMPATIBLE_DRIVER, VK_ERROR_TOO_MANY_OBJECTS, VK_ERROR_FORMAT_NOT_SUPPORTED, VK_ERROR_FRAGMENTED_POOL, VK_ERROR_UNKNOWN, VK_ERROR_OUT_OF_POOL_MEMORY, VK_ERROR_INVALID_EXTERNAL_HANDLE, VK_ERROR_FRAGMENTATION, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS, VK_ERROR_SURFACE_LOST_KHR, VK_ERROR_NATIVE_WINDOW_IN_USE_KHR, VK_SUBOPTIMAL_KHR, VK_ERROR_OUT_OF_DATE_KHR, VK_ERROR_INCOMPATIBLE_DISPLAY_KHR, VK_ERROR_VALIDATION_FAILED_EXT, VK_ERROR_INVALID_SHADER_NV, VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT, VK_ERROR_NOT_PERMITTED_EXT, VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT, VK_THREAD_IDLE_KHR, VK_THREAD_DONE_KHR, VK_OPERATION_DEFERRED_KHR, VK_OPERATION_NOT_DEFERRED_KHR, VK_PIPELINE_COMPILE_REQUIRED_EXT, VK_ERROR_OUT_OF_POOL_MEMORY_KHR, VK_ERROR_INVALID_EXTERNAL_HANDLE_KHR, VK_ERROR_FRAGMENTATION_EXT, VK_ERROR_INVALID_DEVICE_ADDRESS_EXT, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR, VK_ERROR_PIPELINE_COMPILE_REQUIRED_EXT">
			<proto>
				<type>VkResult</type> <name>vmaBindImageMemory2</name>
			</proto>
			<param>
				<type>VmaAllocator</type> <name>allocator</name>
			</param>
			<param>
				<type>VmaAllocation</type> <name>allocation</name>
			</param>
			<param>
				<type>VkDeviceSize</type> <name>allocationLocalOffset</name>
			</param>
			<param>
				<type>VkImage</type> <name>image</name>
			</param>
			<param>
				<type>const void *</type> <name>pNext</name>
			</param>
		</command>
		<command successcodes="VK_SUCCESS" errorcodes="VK_SUCCESS, VK_NOT_READY, VK_TIMEOUT, VK_EVENT_SET, VK_EVENT_RESET, VK_INCOMPLETE, VK_ERROR_OUT_OF_HOST_MEMORY, VK_ERROR_OUT_OF_DEVICE_MEMORY, VK_ERROR_INITIALIZATION_FAILED, VK_ERROR_DEVICE_LOST, VK_ERROR_MEMORY_MAP_FAILED, VK_ERROR_LAYER_NOT_PRESENT, VK_ERROR_EXTENSION_NOT_PRESENT, VK_ERROR_FEATURE_NOT_PRESENT, VK_ERROR_INCOMPATIBLE_DRIVER, VK_ERROR_TOO_MANY_OBJECTS, VK_ERROR_FORMAT_NOT_SUPPORTED, VK_ERROR_FRAGMENTED_POOL, VK_ERROR_UNKNOWN, VK_ERROR_OUT_OF_POOL_MEMORY, VK_ERROR_INVALID_EXTERNAL_HANDLE, VK_ERROR_FRAGMENTATION, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS, VK_ERROR_SURFACE_LOST_KHR, VK_ERROR_NATIVE_WINDOW_IN_USE_KHR, VK_SUBOPTIMAL_KHR, VK_ERROR_OUT_OF_DATE_KHR, VK_ERROR_INCOMPATIBLE_DISPLAY_KHR, VK_ERROR_VALIDATION_FAILED_EXT, VK_ERROR_INVALID_SHADER_NV, VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT, VK_ERROR_NOT_PERMITTED_EXT, VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT, VK_THREAD_IDLE_KHR, VK_THREAD_DONE_KHR, VK_OPERATION_DEFERRED_KHR, VK_OPERATION_NOT_DEFERRED_KHR, VK_PIPELINE_COMPILE_REQUIRED_EXT, VK_ERROR_OUT_OF_POOL_MEMORY_KHR, VK_ERROR_INVALID_EXTERNAL_HANDLE_KHR, VK_ERROR_FRAGMENTATION_EXT, VK_ERROR_INVALID_DEVICE_ADDRESS_EXT, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR, VK_ERROR_PIPELINE_COMPILE_REQUIRED_EXT">
			<proto>
				<type>VkResult</type> <name>vmaCreateBuffer</name>
			</proto>
			<param>
				<type>VmaAllocator</type> <name>allocator</name>
			</param>
			<param>
				<type>const VkBufferCreateInfo *</type> <name>pBufferCreateInfo</name>
			</param>
			<param>
				<type>const VmaAllocationCreateInfo *</type> <name>pAllocationCreateInfo</name>
			</param>
			<param>
				<type>VkBuffer *</type> <name>pBuffer</name>
			</param>
			<param>
				<type>VmaAllocation *</type> <name>pAllocation</name>
			</param>
			<param>
				<type>VmaAllocationInfo *</type> <name>pAllocationInfo</name>
			</param>
		</command>
		<command>
			<proto>
				<type>void</type> <name>vmaDestroyBuffer</name>
			</proto>
			<param>
				<type>VmaAllocator</type> <name>allocator</name>
			</param>
			<param>
				<type>VkBuffer</type> <name>buffer</name>
			</param>
			<param>
				<type>VmaAllocation</type> <name>allocation</name>
			</param>
		</command>
		<command successcodes="VK_SUCCESS" errorcodes="VK_SUCCESS, VK_NOT_READY, VK_TIMEOUT, VK_EVENT_SET, VK_EVENT_RESET, VK_INCOMPLETE, VK_ERROR_OUT_OF_HOST_MEMORY, VK_ERROR_OUT_OF_DEVICE_MEMORY, VK_ERROR_INITIALIZATION_FAILED, VK_ERROR_DEVICE_LOST, VK_ERROR_MEMORY_MAP_FAILED, VK_ERROR_LAYER_NOT_PRESENT, VK_ERROR_EXTENSION_NOT_PRESENT, VK_ERROR_FEATURE_NOT_PRESENT, VK_ERROR_INCOMPATIBLE_DRIVER, VK_ERROR_TOO_MANY_OBJECTS, VK_ERROR_FORMAT_NOT_SUPPORTED, VK_ERROR_FRAGMENTED_POOL, VK_ERROR_UNKNOWN, VK_ERROR_OUT_OF_POOL_MEMORY, VK_ERROR_INVALID_EXTERNAL_HANDLE, VK_ERROR_FRAGMENTATION, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS, VK_ERROR_SURFACE_LOST_KHR, VK_ERROR_NATIVE_WINDOW_IN_USE_KHR, VK_SUBOPTIMAL_KHR, VK_ERROR_OUT_OF_DATE_KHR, VK_ERROR_INCOMPATIBLE_DISPLAY_KHR, VK_ERROR_VALIDATION_FAILED_EXT, VK_ERROR_INVALID_SHADER_NV, VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT, VK_ERROR_NOT_PERMITTED_EXT, VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT, VK_THREAD_IDLE_KHR, VK_THREAD_DONE_KHR, VK_OPERATION_DEFERRED_KHR, VK_OPERATION_NOT_DEFERRED_KHR, VK_PIPELINE_COMPILE_REQUIRED_EXT, VK_ERROR_OUT_OF_POOL_MEMORY_KHR, VK_ERROR_INVALID_EXTERNAL_HANDLE_KHR, VK_ERROR_FRAGMENTATION_EXT, VK_ERROR_INVALID_DEVICE_ADDRESS_EXT, VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR, VK_ERROR_PIPELINE_COMPILE_REQUIRED_EXT">
			<proto>
				<type>VkResult</type> <name>vmaCreateImage</name>
			</proto>
			<param>
				<type>VmaAllocator</type> <name>allocator</name>
			</param>
			<param>
				<type>const VkImageCreateInfo *</type> <name>pImageCreateInfo</name>
			</param>
			<param>
				<type>const VmaAllocationCreateInfo *</type> <name>pAllocationCreateInfo</name>
			</param>
			<param>
				<type>VkImage *</type> <name>pImage</name>
			</param>
			<param>
				<type>VmaAllocation *</type> <name>pAllocation</name>
			</param>
			<param>
				<type>VmaAllocationInfo *</type> <name>pAllocationInfo</name>
			</param>
		</command>
		<command>
			<proto>
				<type>void</type> <name>vmaDestroyImage</name>
			</proto>
			<param>
				<type>VmaAllocator</type> <name>allocator</name>
			</param>
			<param>
				<type>VkImage</type> <name>image</name>
			</param>
			<param>
				<type>VmaAllocation</type> <name>allocation</name>
			</param>
		</command>
	</commands>
</registry>
